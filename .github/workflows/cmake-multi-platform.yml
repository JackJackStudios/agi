name: CMake build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    env:
      VULKAN_SDK: C:/VulkanSDK/1.3.296.0
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release, Debug]
        c_compiler: [gcc, clang, cl]
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y xorg-dev libvulkan-dev vulkan-tools libwayland-dev libxkbcommon-dev wayland-protocols

    - name: Install Vulkan SDK on Windows
      if: runner.os == 'Windows'
      run: |
        curl -L https://sdk.lunarg.com/sdk/download/1.3.296.0/windows/VulkanSDK-1.3.296.0-Installer.exe -o ./Installer.exe
        ./Installer.exe install --accept-licenses --accept-messages --confirm-command
        
    - name: Configure CMake
      run: |
        if [[ "${{ matrix.c_compiler }}" == "gcc" ]]; then
          CXX=g++
        elif [[ "${{ matrix.c_compiler }}" == "clang" ]]; then
          CXX=clang++
        else
          CXX=cl
        fi
        
        cmake -B build \
          -DCMAKE_CXX_COMPILER=$CXX \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -S "$GITHUB_WORKSPACE" \
          $([[ "$RUNNER_OS" == "Windows" ]] && echo "-DVulkan_LIBRARY=${{ env.VULKAN_SDK }}/Lib/vulkan-1.lib -DVulkan_INCLUDE_DIR=${{ env.VULKAN_SDK }}/Include")
      shell: bash

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}
